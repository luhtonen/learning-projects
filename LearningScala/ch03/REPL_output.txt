Expression Blocks
-----------------
scala> val x = 5 * 20; val amount = x + 10
x: Int = 100
amount: Int = 110

scala> val amount = { val x = 5 * 20; x + 10 }
amount: Int = 110

scala> val amount = {
     | val x = 5 * 20
     | x + 10
     | }
amount: Int = 110

scala> { val a = 1; { val b = a * 2; { val c = b + 4; c } } }
res0: Int = 6

If Expressions
--------------
scala> if ( 47 % 3 > 0) println("Not a multiple of 3")
Not a multiple of 3

scala> val result = if ( false ) "what does this return?"
result: Any = ()

If-Else Expressions
-------------------
scala> val x = 10; val y = 20
x: Int = 10
y: Int = 20

scala> val max = if (x > y) x else y
max: Int = 20

Match Expressions
-----------------
scala> val x = 10; val y = 20
x: Int = 10
y: Int = 20

scala> val max = x > y match {
     | case true => x
     | case false => y
     | }
max: Int = 20

scala> val status = 500
status: Int = 500

scala> val message = status match {
     | case 200 => "ok"
     | case 400 => {
     |   println("ERROR - we called the service incorrectly")
     |   "error"
     | }
     | case 500 => {
     |   println("ERROR - the service encountered an error")
     |   "error"
     | }
     | }
ERROR - the service encountered an error
message: String = error

scala> val day = "MON"
day: String = MON

scala> val kind = day match {
     | case "MON" | "TUE" | "WED" | "THU" | "FRI" => "weekday"
     | case "SAT" | "SUN" => "weekend"
     | }
kind: String = weekday
