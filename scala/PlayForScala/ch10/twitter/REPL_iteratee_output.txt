// Experiments with Iteratee
// -------------------------
// Commands should be run inside Play project
>activator
[info] Loading project definition from ... <snip>

$ console
[info] Starting scala interpreter...
[info]
Welcome to Scala version 2.11.6 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_45).
Type in expressions to have them evaluated.
Type :help for more information.

scala> import play.api.libs.iteratee.Iteratee
import play.api.libs.iteratee.Iteratee

scala> import scala.concurrent.ExecutionContext.Implicits.global
import scala.concurrent.ExecutionContext.Implicits.global

scala> val summingIteratee = Iteratee.fold(0) { (sum: Int, chunk: Int) => sum + chunk }
summingIteratee: play.api.libs.iteratee.Iteratee[Int,Int] = Cont(<function1>)

scala> import play.api.libs.iteratee.Enumerator
import play.api.libs.iteratee.Enumerator

scala> val intEnumerator = Enumerator(1,6,3,7,3,1,1,9)
intEnumerator: play.api.libs.iteratee.Enumerator[Int] = play.api.libs.iteratee.Enumerator$$anon$19@7f897f42

scala> import scala.concurrent.Future
import scala.concurrent.Future

scala> val newIterateeFuture: Future[Iteratee[Int, Int]] = intEnumerator(summingIteratee)
newIterateeFuture: scala.concurrent.Future[play.api.libs.iteratee.Iteratee[Int,Int]] = scala.concurrent.impl.Promise$DefaultPromise@110c2d75

scala> val resultFuture: Future[Int] = newIterateeFuture.flatMap(_.run)
resultFuture: scala.concurrent.Future[Int] = scala.concurrent.impl.Promise$DefaultPromise@25fab43

scala> resultFuture.onComplete(sum => println(s"The sum is $sum"))
The sum is Success(31)
